// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Links on non-object fields should generate the correct schema 1`] = `
"schema {
  query: Query
}

directive @globalOptions(subgraph: String, endpoint: String, operationHeaders: ObjMap, queryStringOptions: ObjMap, queryParams: ObjMap) on OBJECT

directive @handler(subgraph: String, name: String, options: ObjMap) on OBJECT

directive @httpOperation(subgraph: String, path: String, operationSpecificHeaders: ObjMap, httpMethod: HTTPMethod, isBinary: Boolean, requestBaseBody: ObjMap, queryParamArgMap: ObjMap, queryStringOptionsByParam: ObjMap) on FIELD_DEFINITION

directive @resolveRoot(subgraph: String) on FIELD_DEFINITION

directive @linkResolver(subgraph: String, linkResolverMap: ObjMap) on FIELD_DEFINITION

directive @link(defaultRootType: String, defaultField: String) on FIELD_DEFINITION

type Query @globalOptions(subgraph: "toto", endpoint: "http://localhost:7777") @handler(subgraph: "toto", name: "openapi") {
  test: test_200_response @httpOperation(subgraph: "toto", path: "/test", operationSpecificHeaders: "{\\"accept\\":\\"application/json\\"}", httpMethod: GET) @linkResolver(subgraph: "toto", linkResolverMap: "{\\"testLink\\":{\\"targetTypeName\\":\\"Query\\",\\"targetFieldName\\":\\"testLink\\"}}")
  testLink: testLink_200_response @httpOperation(subgraph: "toto", path: "/test-link", operationSpecificHeaders: "{\\"accept\\":\\"application/json\\"}", httpMethod: GET)
}

type test_200_response {
  String: String @resolveRoot(subgraph: "toto")
  testLink: testLink_200_response @link(subgraph: "toto", defaultRootType: "Query", defaultField: "test")
}

type testLink_200_response {
  foo: String
}

scalar ObjMap

enum HTTPMethod {
  GET
  HEAD
  POST
  PUT
  DELETE
  CONNECT
  OPTIONS
  TRACE
  PATCH
}"
`;
