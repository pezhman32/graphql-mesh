// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Algolia schema with nested one Of should generate the correct schema: schema 1`] = `
"schema {
  query: Query
  mutation: Mutation
}

directive @oneOf on OBJECT | INTERFACE | INPUT_OBJECT

directive @resolveRoot(subgraph: String) on FIELD_DEFINITION

directive @flatten(subgraph: String) on FIELD_DEFINITION

directive @globalOptions(subgraph: String, endpoint: String, operationHeaders: ObjMap, queryStringOptions: ObjMap, queryParams: ObjMap) on OBJECT

directive @handler(subgraph: String, name: String, options: ObjMap) on OBJECT

directive @httpOperation(subgraph: String, path: String, operationSpecificHeaders: ObjMap, httpMethod: HTTPMethod, isBinary: Boolean, requestBaseBody: ObjMap, queryParamArgMap: ObjMap, queryStringOptionsByParam: ObjMap) on FIELD_DEFINITION

type Query @globalOptions(subgraph: "algolia-nested-one-of", endpoint: "https://{args.appId:myAppId}.algolia.net") @handler(subgraph: "algolia-nested-one-of", name: "openapi") {
  "Retrieve the Rule with the specified objectID."
  getRule(appId: String = "myAppId"): rule @httpOperation(subgraph: "algolia-nested-one-of", path: "/1/indexes/", operationSpecificHeaders: "{\\"accept\\":\\"application/json\\"}", httpMethod: GET)
}

"Rule object."
type rule {
  consequence: consequence
}

"Consequence of the Rule."
type consequence {
  params: consequenceParams
}

type consequenceParams {
  facetFilters: [String] @flatten(subgraph: "algolia-nested-one-of")
}

type Mutation {
  "Create or update the Rule with the specified objectID."
  saveRule(appId: String = "myAppId", input: rule_Input): String @httpOperation(subgraph: "algolia-nested-one-of", path: "/1/indexes/", operationSpecificHeaders: "{\\"Content-Type\\":\\"application/json\\",\\"accept\\":\\"application/json\\"}", httpMethod: PUT)
}

"Rule object."
input rule_Input {
  consequence: consequence_Input
}

"Consequence of the Rule."
input consequence_Input {
  params: consequenceParams_Input
}

input consequenceParams_Input {
  facetFilters: [facetFilters_Input]
}

input facetFilters_Input @oneOf(subgraph: "algolia-nested-one-of") {
  String_list: [String]
  String: String
}

scalar ObjMap

enum HTTPMethod {
  GET
  HEAD
  POST
  PUT
  DELETE
  CONNECT
  OPTIONS
  TRACE
  PATCH
}"
`;
