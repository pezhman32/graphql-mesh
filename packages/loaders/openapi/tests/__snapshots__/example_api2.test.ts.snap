// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`OpenAPI loader: Naming convention should generate the schema correctly 1`] = `
"schema {
  query: Query
}

directive @globalOptions(subgraph: String, endpoint: String, operationHeaders: ObjMap, queryStringOptions: ObjMap, queryParams: ObjMap) on OBJECT

directive @handler(subgraph: String, name: String, options: ObjMap) on OBJECT

directive @httpOperation(subgraph: String, path: String, operationSpecificHeaders: ObjMap, httpMethod: HTTPMethod, isBinary: Boolean, requestBaseBody: ObjMap, queryParamArgMap: ObjMap, queryStringOptionsByParam: ObjMap) on FIELD_DEFINITION

type Query @globalOptions(subgraph: "test", endpoint: "http://localhost:{context.port}/api") @handler(subgraph: "test", name: "openapi") {
  "Return a user."
  user: user @httpOperation(subgraph: "test", path: "/user", operationSpecificHeaders: "{\\"accept\\":\\"application/json\\"}", httpMethod: GET)
  "Return a user."
  User: user @httpOperation(subgraph: "test", path: "/user2", operationSpecificHeaders: "{\\"accept\\":\\"application/json\\"}", httpMethod: GET)
}

"A user represents a natural person"
type user {
  "The legal name of a user"
  name: String
}

scalar ObjMap

enum HTTPMethod {
  GET
  HEAD
  POST
  PUT
  DELETE
  CONNECT
  OPTIONS
  TRACE
  PATCH
}"
`;
